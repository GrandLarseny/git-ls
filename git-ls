#!/bin/bash

usage(){
    echo 'Usage: git ls [-h | --help] [-b | --batch | -c | --color] [-a | --all] [[--] directory]'
}


dotfiles=0
colors=1
formatting=1

while :
do
    case "$1" in
    --help|-h)
        usage
        exit 0
        ;;

    -a|-A|-all)
        shift
        dotfiles=1
        ;;

    -c|-C|--color)
        shift
        colors=0
        ;;

    -b|-B|--batch)
        shift
        formatting=0
        colors=0
        ;;

    --)
        shift
        break
        ;;

    *)
        break
        ;;
    esac
done

if [ "$#" -ne 0 ]
then
    if [ ! -d "$1" ]
    then
        usage
        exit 1
    fi
    cd "$1"
fi

if ! git rev-parse --is-inside-work-tree > /dev/null 2>&1
then
    git rev-parse --is-inside-work-tree
    exit 1
fi


if [ "$colors" -eq 1 ]
then
    cStaged=$'\e[0;32m'
    cUntracked=$'\e[0;31m'
    cIgnored=$'\e[0;37m'
    cHash=$'\e[0;33m'
    cReset=$'\e[0m'
fi

if [ "$formatting" -eq 1 ]
then
    file_length="$(ls | wc -L)"

    if [ "$dotfiles" -eq 1 ]
    then
        file_length="$(ls -A | wc -L)"
    fi
fi

if [ "$dotfiles" -eq 1 ]
then
    shopt -s dotglob
fi

for file in *
do
    if [ "$file" = ".git" ]
    then
        continue
    fi

    log="$(git log -1 --pretty="format:%cr"$'\t'"%H"$'\t'"%s" "$file")"

    if [ -n "$log" ]
    then
        if [ "$formatting" -eq 0 ]
        then
            printf "$file\t$log\n"
        else
            awk -v gitlog="$log" -v file="$file" 'BEGIN {
                split(gitlog,l,"\t");
                printf "%-'"$file_length"'s\t%-8.15s\t'"$cHash"'%.7s'"$cReset"'\t%s\n", file, l[1], l[2], l[3]
            }'
        fi
    else
        if [ "$formatting" -eq 0 ]
        then
            echo -ne "$file\t"
        else
            printf "%-${file_length}s\t" "$file"
        fi

        status="$(git status --porcelain "$file")"

        if git check-ignore "$file" > /dev/null
        then
            echo -e "${cIgnored}Gitignored$cReset"
        elif [[ "$status" == "??"* ]]
        then
            echo -e "${cUntracked}Untracked$cReset"
        elif [[ "$status" == "A"* ]]
        then
            echo -e "${cStaged}Staged$cReset"
        elif [ -z "$status" ]
        then
            echo "Empty"
        fi
    fi
done
